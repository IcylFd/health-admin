{"remainingRequest":"/Users/lifangdi/workspace/iview-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lifangdi/workspace/iview-admin/src/components/markdown/markdown.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/Users/lifangdi/workspace/iview-admin/src/components/markdown/markdown.vue","mtime":1548038358000},{"path":"/Users/lifangdi/workspace/iview-admin/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/lifangdi/workspace/iview-admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/lifangdi/workspace/iview-admin/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/lifangdi/workspace/iview-admin/node_modules/less-loader/dist/cjs.js","mtime":1548038398000},{"path":"/Users/lifangdi/workspace/iview-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lifangdi/workspace/iview-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.markdown-wrapper{\n  .editor-toolbar.fullscreen{\n    z-index: 9999;\n  }\n  .CodeMirror-fullscreen{\n    z-index: 9999;\n  }\n  .CodeMirror-fullscreen ~ .editor-preview-side{\n    z-index: 9999;\n  }\n}\n",{"version":3,"sources":["markdown.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"markdown.vue","sourceRoot":"src/components/markdown","sourcesContent":["<template>\n  <div class=\"markdown-wrapper\">\n    <textarea ref=\"editor\"></textarea>\n  </div>\n</template>\n\n<script>\nimport Simplemde from 'simplemde'\nimport 'simplemde/dist/simplemde.min.css'\nexport default {\n  name: 'MarkdownEditor',\n  props: {\n    value: {\n      type: String,\n      default: ''\n    },\n    options: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    },\n    localCache: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data () {\n    return {\n      editor: null\n    }\n  },\n  methods: {\n    addEvents () {\n      this.editor.codemirror.on('change', () => {\n        let value = this.editor.value()\n        if (this.localCache) localStorage.markdownContent = value\n        this.$emit('input', value)\n        this.$emit('on-change', value)\n      })\n      this.editor.codemirror.on('focus', () => {\n        this.$emit('on-focus', this.editor.value())\n      })\n      this.editor.codemirror.on('blur', () => {\n        this.$emit('on-blur', this.editor.value())\n      })\n    }\n  },\n  mounted () {\n    this.editor = new Simplemde(Object.assign(this.options, {\n      element: this.$refs.editor\n    }))\n    /**\n     * 事件列表为Codemirror编辑器的事件，更多事件类型，请参考：\n     * https://codemirror.net/doc/manual.html#events\n     */\n    this.addEvents()\n    let content = localStorage.markdownContent\n    if (content) this.editor.value(content)\n  }\n}\n</script>\n\n<style lang=\"less\">\n.markdown-wrapper{\n  .editor-toolbar.fullscreen{\n    z-index: 9999;\n  }\n  .CodeMirror-fullscreen{\n    z-index: 9999;\n  }\n  .CodeMirror-fullscreen ~ .editor-preview-side{\n    z-index: 9999;\n  }\n}\n</style>\n"]}]}