{"remainingRequest":"/Users/lifangdi/workspace/iview-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lifangdi/workspace/iview-admin/src/view/error-store/error-store.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lifangdi/workspace/iview-admin/src/view/error-store/error-store.vue","mtime":1548038358000},{"path":"/Users/lifangdi/workspace/iview-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lifangdi/workspace/iview-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lifangdi/workspace/iview-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lifangdi/workspace/iview-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { errorReq } from '@/api/data'\nexport default {\n  name: 'error_store_page',\n  methods: {\n    click () {\n      console.log(admin)\n    },\n    ajaxClick () {\n      errorReq()\n    }\n  }\n}\n",{"version":3,"sources":["error-store.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"error-store.vue","sourceRoot":"src/view/error-store","sourcesContent":["<template>\n  <div>\n    <Card>\n      iview-admin会自动将你程序中的错误收集起来，你可以将错误日志发给后端保存起来。如果你不需要这个功能，将'./src/config/index.js'里的plugin的'error-store'属性删掉即可。\n      另外在开发环境下，你程序中的错误都会被收集起来，这样可能不利于你排查错误，你可以将'./src/config/index.js'的'error-store'的'developmentOff'设为true。\n      如果你只是想收集错误日志，不希望登录用户看到错误日志，你可以不提供查看日志的入口，只需将'./src/config/index.js'的'error-store'的'showInHeader'设为false。\n    </Card>\n    <Card style=\"margin-top: 20px;\">\n      <Row>\n        <i-col span=\"8\">\n          <Button @click=\"click\" style=\"display: block\">点击测试触发程序错误</Button>\n          <Button @click=\"ajaxClick\" style=\"margin-top:10px;\">点击测试触发ajax接口请求错误</Button>\n        </i-col>\n        <i-col span=\"16\">\n          ajax接口请求是请求easy-mock的一个不存在接口，所以服务端会报404错误，错误收集机制会收集这个错误，测试的时候有一定网络延迟，所以点击按钮之后稍等一会才会收集到错误。\n        </i-col>\n      </Row>\n    </Card>\n  </div>\n</template>\n\n<script>\nimport { errorReq } from '@/api/data'\nexport default {\n  name: 'error_store_page',\n  methods: {\n    click () {\n      console.log(admin)\n    },\n    ajaxClick () {\n      errorReq()\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"]}]}