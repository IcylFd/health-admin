{"remainingRequest":"/Users/lifangdi/workspace/iview-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lifangdi/workspace/iview-admin/src/components/paste-editor/paste-editor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lifangdi/workspace/iview-admin/src/components/paste-editor/paste-editor.vue","mtime":1548038358000},{"path":"/Users/lifangdi/workspace/iview-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lifangdi/workspace/iview-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lifangdi/workspace/iview-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lifangdi/workspace/iview-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n\nimport CodeMirror from 'codemirror'\nimport 'codemirror/lib/codemirror.css'\nimport { forEach } from '@/libs/tools'\nimport createPlaceholder from './plugins/placeholder'\nexport default {\n  name: 'PasteEditor',\n  props: {\n    value: Array,\n    pasteData: {\n      type: String,\n      default: ''\n    },\n    placeholder: {\n      type: String,\n      default: '从网页或其他应用软件复制表格数据，粘贴到这里 。默认第一行是表头，使用回车键添加新行，使用Tab键区分列。'\n    }\n  },\n  data () {\n    return {\n      pasteDataArr: [],\n      rowArrLength: 0,\n      editor: null\n    }\n  },\n  watch: {\n    pasteData (val) {\n      if (val === '') {\n        this.editor.setValue('')\n      }\n    }\n  },\n  computed: {\n    rowNum () {\n      return this.pasteDataArr.length\n    },\n    colNum () {\n      return this.pasteDataArr[0] ? this.pasteDataArr[0].length : 0\n    }\n  },\n  methods: {\n    handleKeyup (e) {\n      this.handleAreaData()\n    },\n    /**\n     * @description 处理粘贴操作\n     */\n    handleContentChanged (content) {\n      let pasteData = content.trim()\n      this.$emit('on-content-change', pasteData)\n      let rows = pasteData.split((/[\\n\\u0085\\u2028\\u2029]|\\r\\n?/g)).map(row => {\n        return row.split('\\t')\n      })\n      if (content === '') rows = []\n      this.pasteDataArr = rows\n      this.clearLineClass()\n      this.checkColNumInEveryRow()\n      this.$emit('input', this.pasteDataArr)\n    },\n    /**\n     * @description 检查除第一行的每一行列数是否与第一行相同\n     */\n    checkColNumInEveryRow () {\n      let i = 0\n      const len = this.rowNum\n      if (len === 0) return\n      while (++i < len) {\n        let item = this.pasteDataArr[i]\n        if (item.length !== this.colNum && (!(i === len - 1 && item.length === 1 && item[0] === '') || i !== len - 1)) {\n          this.markIncorrectRow(i)\n          this.$emit('on-error', i)\n          return false\n        }\n      }\n      this.$emit('on-success', this.pasteDataArr)\n      return true\n    },\n    /**\n     * @description 标记不符合格式的一行\n     */\n    markIncorrectRow (index) {\n      this.editor.addLineClass(index, 'text', 'incorrect-row')\n    },\n    /**\n     * @description 标记不符合格式的一行\n     */\n    clearLineClass () {\n      forEach(this.pasteDataArr, (item, index) => {\n        this.editor.removeLineClass(index, 'text', 'incorrect-row')\n      })\n    }\n  },\n  mounted () {\n    createPlaceholder(CodeMirror)\n    this.editor = CodeMirror.fromTextArea(this.$refs.codemirror, {\n      lineNumbers: true,\n      tabSize: 1,\n      lineWrapping: true,\n      placeholder: this.placeholder\n    })\n    this.editor.on('change', (editor) => {\n      this.handleContentChanged(editor.getValue())\n    })\n    this.editor.addLineClass(0, 'text', 'first-row')\n  }\n}\n",{"version":3,"sources":["paste-editor.vue"],"names":[],"mappingsfile":"paste-editor.vue","sourceRoot":"src/components/paste-editor","sourcesContent":["<template>\n  <div class=\"paste-editor-wrapper\">\n    <textarea ref=\"codemirror\" class=\"textarea-el\"></textarea>\n  </div>\n</template>\n<script>\nimport CodeMirror from 'codemirror'\nimport 'codemirror/lib/codemirror.css'\nimport { forEach } from '@/libs/tools'\nimport createPlaceholder from './plugins/placeholder'\nexport default {\n  name: 'PasteEditor',\n  props: {\n    value: Array,\n    pasteData: {\n      type: String,\n      default: ''\n    },\n    placeholder: {\n      type: String,\n      default: '从网页或其他应用软件复制表格数据，粘贴到这里 。默认第一行是表头，使用回车键添加新行，使用Tab键区分列。'\n    }\n  },\n  data () {\n    return {\n      pasteDataArr: [],\n      rowArrLength: 0,\n      editor: null\n    }\n  },\n  watch: {\n    pasteData (val) {\n      if (val === '') {\n        this.editor.setValue('')\n      }\n    }\n  },\n  computed: {\n    rowNum () {\n      return this.pasteDataArr.length\n    },\n    colNum () {\n      return this.pasteDataArr[0] ? this.pasteDataArr[0].length : 0\n    }\n  },\n  methods: {\n    handleKeyup (e) {\n      this.handleAreaData()\n    },\n    /**\n     * @description 处理粘贴操作\n     */\n    handleContentChanged (content) {\n      let pasteData = content.trim()\n      this.$emit('on-content-change', pasteData)\n      let rows = pasteData.split((/[\\n\\u0085\\u2028\\u2029]|\\r\\n?/g)).map(row => {\n        return row.split('\\t')\n      })\n      if (content === '') rows = []\n      this.pasteDataArr = rows\n      this.clearLineClass()\n      this.checkColNumInEveryRow()\n      this.$emit('input', this.pasteDataArr)\n    },\n    /**\n     * @description 检查除第一行的每一行列数是否与第一行相同\n     */\n    checkColNumInEveryRow () {\n      let i = 0\n      const len = this.rowNum\n      if (len === 0) return\n      while (++i < len) {\n        let item = this.pasteDataArr[i]\n        if (item.length !== this.colNum && (!(i === len - 1 && item.length === 1 && item[0] === '') || i !== len - 1)) {\n          this.markIncorrectRow(i)\n          this.$emit('on-error', i)\n          return false\n        }\n      }\n      this.$emit('on-success', this.pasteDataArr)\n      return true\n    },\n    /**\n     * @description 标记不符合格式的一行\n     */\n    markIncorrectRow (index) {\n      this.editor.addLineClass(index, 'text', 'incorrect-row')\n    },\n    /**\n     * @description 标记不符合格式的一行\n     */\n    clearLineClass () {\n      forEach(this.pasteDataArr, (item, index) => {\n        this.editor.removeLineClass(index, 'text', 'incorrect-row')\n      })\n    }\n  },\n  mounted () {\n    createPlaceholder(CodeMirror)\n    this.editor = CodeMirror.fromTextArea(this.$refs.codemirror, {\n      lineNumbers: true,\n      tabSize: 1,\n      lineWrapping: true,\n      placeholder: this.placeholder\n    })\n    this.editor.on('change', (editor) => {\n      this.handleContentChanged(editor.getValue())\n    })\n    this.editor.addLineClass(0, 'text', 'first-row')\n  }\n}\n</script>\n<style lang=\"less\">\n@import './paste-editor.less';\n</style>\n"]}]}