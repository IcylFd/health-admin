{"remainingRequest":"/Users/lifangdi/workspace/iview-admin/node_modules/babel-loader/lib/index.js!/Users/lifangdi/workspace/iview-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lifangdi/workspace/iview-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lifangdi/workspace/iview-admin/src/components/drag-list/drag-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lifangdi/workspace/iview-admin/src/components/drag-list/drag-list.vue","mtime":1548038358000},{"path":"/Users/lifangdi/workspace/iview-admin/.babelrc","mtime":1548038358000},{"path":"/Users/lifangdi/workspace/iview-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lifangdi/workspace/iview-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lifangdi/workspace/iview-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lifangdi/workspace/iview-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport draggable from 'vuedraggable';\nexport default {\n  name: 'DragList',\n  components: {\n    draggable: draggable\n  },\n  props: {\n    list1: {\n      type: Array,\n      required: true\n    },\n    list2: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    dropConClass: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  data: function data() {\n    return {\n      options: {\n        group: 'drag_list'\n      }\n    };\n  },\n  methods: {\n    handleListChange: function handleListChange(value, type) {\n      if (type === 'left') this.$emit('update:list1', value);else this.$emit('update:list2', value);\n    },\n    handleEnd: function handleEnd(event, type) {\n      var srcClassName = (event.srcElement || event.target).classList[0];\n      var targetClassName = event.to.classList[0];\n      var src = '';\n      var target = '';\n\n      if (srcClassName === targetClassName) {\n        if (type === 'left') {\n          src = 'left';\n          target = 'left';\n        } else {\n          src = 'right';\n          target = 'right';\n        }\n      } else {\n        if (type === 'left') {\n          src = 'left';\n          target = 'right';\n        } else {\n          src = 'right';\n          target = 'left';\n        }\n      }\n\n      this.$emit('on-change', {\n        src: src,\n        target: target,\n        oldIndex: event.oldIndex,\n        newIndex: event.newIndex\n      });\n    }\n  }\n};",{"version":3,"sources":["drag-list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAqBA,OAAA,SAAA,MAAA,cAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA;AADA,GAFA;AAKA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,QAAA,EAAA;AAFA,KADA;AAKA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AAFA,KALA;AASA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AAFA;AATA,GALA;AAmBA,EAAA,IAnBA,kBAmBA;AACA,WAAA;AACA,MAAA,OAAA,EAAA;AAAA,QAAA,KAAA,EAAA;AAAA;AADA,KAAA;AAGA,GAvBA;AAwBA,EAAA,OAAA,EAAA;AACA,IAAA,gBADA,4BACA,KADA,EACA,IADA,EACA;AACA,UAAA,IAAA,KAAA,MAAA,EAAA,KAAA,KAAA,CAAA,cAAA,EAAA,KAAA,EAAA,KACA,KAAA,KAAA,CAAA,cAAA,EAAA,KAAA;AACA,KAJA;AAKA,IAAA,SALA,qBAKA,KALA,EAKA,IALA,EAKA;AACA,UAAA,YAAA,GAAA,CAAA,KAAA,CAAA,UAAA,IAAA,KAAA,CAAA,MAAA,EAAA,SAAA,CAAA,CAAA,CAAA;AACA,UAAA,eAAA,GAAA,KAAA,CAAA,EAAA,CAAA,SAAA,CAAA,CAAA,CAAA;AACA,UAAA,GAAA,GAAA,EAAA;AACA,UAAA,MAAA,GAAA,EAAA;;AACA,UAAA,YAAA,KAAA,eAAA,EAAA;AACA,YAAA,IAAA,KAAA,MAAA,EAAA;AACA,UAAA,GAAA,GAAA,MAAA;AACA,UAAA,MAAA,GAAA,MAAA;AACA,SAHA,MAGA;AACA,UAAA,GAAA,GAAA,OAAA;AACA,UAAA,MAAA,GAAA,OAAA;AACA;AACA,OARA,MAQA;AACA,YAAA,IAAA,KAAA,MAAA,EAAA;AACA,UAAA,GAAA,GAAA,MAAA;AACA,UAAA,MAAA,GAAA,OAAA;AACA,SAHA,MAGA;AACA,UAAA,GAAA,GAAA,OAAA;AACA,UAAA,MAAA,GAAA,MAAA;AACA;AACA;;AACA,WAAA,KAAA,CAAA,WAAA,EAAA;AACA,QAAA,GAAA,EAAA,GADA;AAEA,QAAA,MAAA,EAAA,MAFA;AAGA,QAAA,QAAA,EAAA,KAAA,CAAA,QAHA;AAIA,QAAA,QAAA,EAAA,KAAA,CAAA;AAJA,OAAA;AAMA;AAjCA;AAxBA,CAAA","sourcesContent":["<template>\n  <div class=\"drag-list-wrapper\">\n    <div class=\"drag-list-con con1\">\n      <slot name=\"left-title\"></slot>\n      <draggable class=\"drop-box1\" :class=\"dropConClass.left\" :options=\"options\" :value=\"list1\" @input=\"handleListChange($event, 'left')\" @end=\"handleEnd($event, 'left')\">\n        <div class=\"drag-list-item\" v-for=\"(itemLeft, index) in list1\" :key=\"`drag_li1_${index}`\">\n          <slot name=\"left\" :itemLeft=\"itemLeft\">{{ itemLeft }}</slot>\n        </div>\n      </draggable>\n    </div>\n    <div class=\"drag-list-con con2\">\n      <slot name=\"right-title\"></slot>\n      <draggable class=\"drop-box2\" :class=\"dropConClass.right\" :options=\"options\" :value=\"list2\" @input=\"handleListChange($event, 'right')\" @end=\"handleEnd($event, 'right')\">\n        <div class=\"drag-list-item\" v-for=\"(itemRight, index) in list2\" :key=\"`drag_li2_${index}`\">\n          <slot name=\"right\" :itemRight=\"itemRight\">{{ itemRight }}</slot>\n        </div>\n      </draggable>\n    </div>\n  </div>\n</template>\n<script>\nimport draggable from 'vuedraggable'\nexport default {\n  name: 'DragList',\n  components: {\n    draggable\n  },\n  props: {\n    list1: {\n      type: Array,\n      required: true\n    },\n    list2: {\n      type: Array,\n      default: () => []\n    },\n    dropConClass: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data () {\n    return {\n      options: { group: 'drag_list' }\n    }\n  },\n  methods: {\n    handleListChange (value, type) {\n      if (type === 'left') this.$emit('update:list1', value)\n      else this.$emit('update:list2', value)\n    },\n    handleEnd (event, type) {\n      const srcClassName = (event.srcElement || event.target).classList[0]\n      const targetClassName = event.to.classList[0]\n      let src = ''\n      let target = ''\n      if (srcClassName === targetClassName) {\n        if (type === 'left') {\n          src = 'left'\n          target = 'left'\n        } else {\n          src = 'right'\n          target = 'right'\n        }\n      } else {\n        if (type === 'left') {\n          src = 'left'\n          target = 'right'\n        } else {\n          src = 'right'\n          target = 'left'\n        }\n      }\n      this.$emit('on-change', {\n        src: src,\n        target: target,\n        oldIndex: event.oldIndex,\n        newIndex: event.newIndex\n      })\n    }\n  }\n}\n</script>\n<style lang=\"less\">\n.drag-list-wrapper{\n  height: 100%;\n  .drag-list-con{\n    width: 50%;\n    float: left;\n  }\n}\n</style>\n"],"sourceRoot":"src/components/drag-list"}]}